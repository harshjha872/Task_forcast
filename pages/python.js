import Head from "next/head";
import supabase from "@/supabase/Supabase";
import { useEffect, useState, useRef } from "react";
import Message from "@/Components/Message";
import SendMsgForm from "@/Components/SendMsgForm";
import Router from "next/router";

export default function Home() {
  const [content, setContent] = useState([]);
  const bottomRef = useRef(null);

  bottomRef.current?.scrollIntoView({ behavior: "smooth" });

  useEffect(() => {
    const fetchingData = async () => {
      let { data, error } = await supabase.from("python").select();

      setContent(() => {
        return data.map((ele) => (
          <Message
            content={ele.content}
            key={ele.id}
            created_at={ele.created_at}
            username={ele.username}
          />
        ));
      });

      const chatMessage = supabase
        .channel("custom-insert-channel")
        .on(
          "postgres_changes",
          { event: "INSERT", schema: "public", table: "python" },
          (payload) => {
            console.log(payload);
            setContent((prev) => {
              return [
                ...prev,
                <Message
                  content={payload.new.content}
                  key={payload.new.id}
                  created_at={payload.new.created_at}
                  username={payload.new.username}
                />,
              ];
            });
            if (bottomRef.current) {
              setTimeout(() => {
                bottomRef.current.scrollIntoView({ behavior: "smooth" });
              }, 0);
            }
          }
        )
        .subscribe();
      if (error) console.log(error);
    };
    fetchingData();
  }, []);

  return (
    <>
      <Head>
        <title>Task</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-neutral-900 sm:w-[65vw] lg:w-[45vw] h-[90vh] overflow-auto flex flex-col m-auto">
        {content}
        <div ref={bottomRef} />
        <SendMsgForm />
        <button
          className="fixed bottom-2 right-2 h-12 w-fit p-4 bg-neutral-600 items-center rounded-md"
          onClick={() => {
            if (localStorage.getItem("user")) {
              localStorage.removeItem("user");
              alert("logged out");
              Router.push("/");
            } else {
              alert("user is already logged out");
            }
          }}
        >
          Logout
        </button>
      </main>
    </>
  );
}
